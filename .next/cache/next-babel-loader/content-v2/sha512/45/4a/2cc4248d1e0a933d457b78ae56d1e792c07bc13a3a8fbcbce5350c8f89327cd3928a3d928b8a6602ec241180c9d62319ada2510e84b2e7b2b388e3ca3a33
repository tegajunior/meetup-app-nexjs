{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\chidiebere\\\\Desktop\\\\Learning-React-From-Udemy\\\\nextjs\\\\advanced-next-app\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this;\n\nimport { useState } from 'react';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nvar MeetupDetails = function MeetupDetails(props) {\n  var isLoading = true;\n\n  if (props.meetupData) {\n    isLoading = false;\n  }\n\n  return;\n  {\n    !isLoading && /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      description: props.meetupData.description,\n      address: props.meetupData.address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 20\n    }, _this);\n  }\n};\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Users/chidiebere/Desktop/Learning-React-From-Udemy/nextjs/advanced-next-app/pages/[meetupId]/index.js"],"names":["useState","MeetupDetail","MeetupDetails","props","isLoading","meetupData","image","title","description","address"],"mappings":";;;;;AACA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAE/B,MAAIC,SAAS,GAAG,IAAhB;;AAEA,MAAID,KAAK,CAACE,UAAV,EAAsB;AACpBD,IAAAA,SAAS,GAAG,KAAZ;AACD;;AAED;AACE;AAAC,KAACA,SAAD,iBAAc,QAAC,YAAD;AACb,MAAA,KAAK,EAAED,KAAK,CAACE,UAAN,CAAiBC,KADX;AAEb,MAAA,KAAK,EAAEH,KAAK,CAACE,UAAN,CAAiBE,KAFX;AAGb,MAAA,WAAW,EAAEJ,KAAK,CAACE,UAAN,CAAiBG,WAHjB;AAIb,MAAA,OAAO,EAAEL,KAAK,CAACE,UAAN,CAAiBI;AAJb;AAAA;AAAA;AAAA;AAAA,aAAd;AAKE;AAEN,CAhBD;;KAAMP,a;;AA2DN,eAAeA,aAAf","sourcesContent":["import { MongoClient, ObjectId } from 'mongodb';\r\nimport { useState } from 'react';\r\n\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\r\n\r\nconst MeetupDetails = (props) => {\r\n\r\n  let isLoading = true;\r\n  \r\n  if (props.meetupData) {\r\n    isLoading = false\r\n  }\r\n  \r\n  return \r\n    {!isLoading && <MeetupDetail\r\n      image={props.meetupData.image}\r\n      title={props.meetupData.title}\r\n      description={props.meetupData.description}\r\n      address={props.meetupData.address}\r\n    />}\r\n  \r\n};\r\nexport async function getStaticPaths() {\r\n  const connect = await MongoClient.connect(\r\n    'mongodb+srv://tegajunior:tegajunior@cluster0.mykpl.mongodb.net/meetups?retryWrites=true&w=majority'\r\n  );\r\n\r\n  const db = connect.db();\r\n\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n\r\n  const connect = await MongoClient.connect(\r\n    'mongodb+srv://tegajunior:tegajunior@cluster0.mykpl.mongodb.net/meetups?retryWrites=true&w=majority'\r\n  );\r\n\r\n  const db = connect.db();\r\n\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  const singleMeetup = await meetupsCollection.findOne({_id: ObjectId(meetupId)})\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: singleMeetup._id.toString(),\r\n        image: singleMeetup.image,\r\n        title: singleMeetup.title,\r\n        description: singleMeetup.description,\r\n        address: singleMeetup.address,\r\n      }\r\n    },\r\n  };\r\n}\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}