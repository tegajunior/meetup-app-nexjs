{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\chidiebere\\\\Desktop\\\\Learning-React-From-Udemy\\\\nextjs\\\\advanced-next-app\\\\pages\\\\[meetupId]\\\\index.js\";\nimport Head from 'next/head';\nimport { MongoClient, ObjectId } from 'mongodb';\nimport { Fragment } from 'react';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      description: props.meetupData.description,\n      address: props.meetupData.address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const connect = await MongoClient.connect('mongodb+srv://tegajunior:tegajunior@cluster0.mykpl.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = connect.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    fallback: 'bl',\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const connect = await MongoClient.connect('mongodb+srv://tegajunior:tegajunior@cluster0.mykpl.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = connect.db();\n  const meetupsCollection = db.collection('meetups');\n  const singleMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  return {\n    props: {\n      meetupData: {\n        id: singleMeetup._id.toString(),\n        image: singleMeetup.image,\n        title: singleMeetup.title,\n        description: singleMeetup.description,\n        address: singleMeetup.address\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/Users/chidiebere/Desktop/Learning-React-From-Udemy/nextjs/advanced-next-app/pages/[meetupId]/index.js"],"names":["Head","MongoClient","ObjectId","Fragment","MeetupDetail","MeetupDetails","props","meetupData","title","description","image","address","getStaticPaths","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","singleMeetup","findOne","id"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA,kBAAQA,KAAK,CAACC,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBE;AAAnD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,YAAD;AACE,MAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBG,KAD1B;AAEE,MAAA,KAAK,EAAEJ,KAAK,CAACC,UAAN,CAAiBC,KAF1B;AAGE,MAAA,WAAW,EAAEF,KAAK,CAACC,UAAN,CAAiBE,WAHhC;AAIE,MAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBI;AAJ5B;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAfD;;AAgBA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,OAAO,GAAG,MAAMZ,WAAW,CAACY,OAAZ,CACpB,oGADoB,CAAtB;AAIA,QAAMC,EAAE,GAAGD,OAAO,CAACC,EAAR,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,IADL;AAELC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACL,GAAP,CAAWQ,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAMD;AACD,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMb,OAAO,GAAG,MAAMZ,WAAW,CAACY,OAAZ,CACpB,oGADoB,CAAtB;AAIA,QAAMC,EAAE,GAAGD,OAAO,CAACC,EAAR,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMc,YAAY,GAAG,MAAMf,iBAAiB,CAACgB,OAAlB,CAA0B;AAACZ,IAAAA,GAAG,EAAEjB,QAAQ,CAACwB,QAAD;AAAd,GAA1B,CAA3B;AAEA,SAAO;AACLpB,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACVyB,QAAAA,EAAE,EAAEF,YAAY,CAACX,GAAb,CAAiBQ,QAAjB,EADM;AAEVjB,QAAAA,KAAK,EAAEoB,YAAY,CAACpB,KAFV;AAGVF,QAAAA,KAAK,EAAEsB,YAAY,CAACtB,KAHV;AAIVC,QAAAA,WAAW,EAAEqB,YAAY,CAACrB,WAJhB;AAKVE,QAAAA,OAAO,EAAEmB,YAAY,CAACnB;AALZ;AADP;AADF,GAAP;AAWD;AACD,eAAeN,aAAf","sourcesContent":["import Head from 'next/head';\r\nimport { MongoClient, ObjectId } from 'mongodb';\r\nimport { Fragment } from 'react';\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\r\n\r\nconst MeetupDetails = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <Head>\r\n        <title>{props.meetupData.title}</title>\r\n        <meta name=\"description\" content={props.meetupData.description} />\r\n      </Head>\r\n      <MeetupDetail\r\n        image={props.meetupData.image}\r\n        title={props.meetupData.title}\r\n        description={props.meetupData.description}\r\n        address={props.meetupData.address}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\nexport async function getStaticPaths() {\r\n  const connect = await MongoClient.connect(\r\n    'mongodb+srv://tegajunior:tegajunior@cluster0.mykpl.mongodb.net/meetups?retryWrites=true&w=majority'\r\n  );\r\n\r\n  const db = connect.db();\r\n\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n  return {\r\n    fallback: 'bl',\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n\r\n  const connect = await MongoClient.connect(\r\n    'mongodb+srv://tegajunior:tegajunior@cluster0.mykpl.mongodb.net/meetups?retryWrites=true&w=majority'\r\n  );\r\n\r\n  const db = connect.db();\r\n\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  const singleMeetup = await meetupsCollection.findOne({_id: ObjectId(meetupId)})\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: singleMeetup._id.toString(),\r\n        image: singleMeetup.image,\r\n        title: singleMeetup.title,\r\n        description: singleMeetup.description,\r\n        address: singleMeetup.address,\r\n      }\r\n    },\r\n  };\r\n}\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}